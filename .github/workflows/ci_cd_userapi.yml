name: Node.js CI/CD

# for each push or PR on branch MAIN
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest
    #defining env variable for directory architecture
    env:
      working-directory: ./userapi
      #defining the default running directory

      NODE_VERSION: "18.18.0" # set this to the node version to use

    defaults:
      run:
        working-directory: ./userapi

    strategy:
      matrix:
        node-version: [18.18.0] #specifying used node version

    steps:
      #REDIS install
      - uses: actions/checkout@v4
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "6.x"
      #REDIS test
      - name: Redis test
        run: redis-cli ping
        working-directory: ${{env.working-directory}}
      #NODE install
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache-dependency-path: ${{env.working-directory}}
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      #install project dependencies
      - name: Installing Node dependencies
        run: npm install
        working-directory: ${{env.working-directory}}
      #run test script to check if the build in working
      - name: Running tests
        run: npm test
        working-directory: ${{env.working-directory}}
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: ./userapi
          
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: tristanqtn/userapi-devops

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./userapi
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy:
    name: Deploy to Azure Web App Service
    defaults:
      run:
        working-directory: ./userapi
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Development"
    env:
      AZURE_WEBAPP_NAME: userapi-tristan-apolline # set this to your application's name
      AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: "Deploy to Azure WebApp"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
